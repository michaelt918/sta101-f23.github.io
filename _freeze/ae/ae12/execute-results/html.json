{
  "hash": "a9def6c6e6dab415557a16a7e477b889",
  "result": {
    "markdown": "---\ntitle: \"Probability I\"\nsubtitle: \"STA 101\"\nformat: html\n---\n\n\n## Bulletin\n\n- Lab 04 **due Friday October 7**\n- Regression project due **Friday October 14**\n\n## Today\n\nBy the end of today you will...\n\n- be able to define random variables, probability, and distributions\n- be able to estimate probabilites from data\n- simulate from a binomial distribution\n\n## Getting started\n\nDownload this application exercise by pasting the code below into your **console**\n\n```\ndownload.file(\"https://sta101-fa22.netlify.app/static/appex/ae12.qmd\",\ndestfile = \"ae12.qmd\")\n```\n\n## Load packages and data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(fivethirtyeight)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(bob_ross)\nglimpse(bob_ross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 403\nColumns: 71\n$ episode            <chr> \"S01E01\", \"S01E02\", \"S01E03\", \"S01E04\", \"S01E05\", \"…\n$ season             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, …\n$ episode_num        <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3,…\n$ title              <chr> \"A WALK IN THE WOODS\", \"MT. MCKINLEY\", \"EBONY SUNSE…\n$ apple_frame        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ aurora_borealis    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ barn               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ beach              <int> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ boat               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ bridge             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ building           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ bushes             <int> 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, …\n$ cabin              <int> 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, …\n$ cactus             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ circle_frame       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ cirrus             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, …\n$ cliff              <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ clouds             <int> 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, …\n$ conifer            <int> 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, …\n$ cumulus            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, …\n$ deciduous          <int> 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, …\n$ diane_andre        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ dock               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ double_oval_frame  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ farm               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ fence              <int> 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ fire               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ florida_frame      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ flowers            <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ fog                <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ framed             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ grass              <int> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, …\n$ guest              <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ half_circle_frame  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ half_oval_frame    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ hills              <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ lake               <int> 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, …\n$ lakes              <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ lighthouse         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ mill               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ moon               <int> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ mountain           <int> 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, …\n$ mountains          <int> 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, …\n$ night              <int> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ ocean              <int> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, …\n$ oval_frame         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ palm_trees         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ path               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ person             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ portrait           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ rectangle_3d_frame <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ rectangular_frame  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ river              <int> 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ rocks              <int> 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ seashell_frame     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ snow               <int> 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, …\n$ snowy_mountain     <int> 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, …\n$ split_frame        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ steve_ross         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ structure          <int> 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, …\n$ sun                <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, …\n$ tomb_frame         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ tree               <int> 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ trees              <int> 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ triple_frame       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ waterfall          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ waves              <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, …\n$ windmill           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ window_frame       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ winter             <int> 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ wood_framed        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n```\n:::\n:::\n\n\n\n## Re-cap from prepare\n\n### Warm-up\n\n- There are 403 episodes of Bob Ross. Assume exactly 1 painting is painted in each episode. Pretend that before each episode, Bob Ross flips a coin to decide whether or not to paint a sunrise. If it lands heads, a sunrise is in the painting and if it's tails then he does not paint a sunrise. Let $X$ be the number of episodes a sunrise is featured in the painting. What is the **sample space** of this random experiment?\n\n- What is an **event**?\n\n- Let *A* be the event $X>10$ and let *B* be the event $X<3$. Are *A* and *B* disjoint?\n\n### Probability\n\nA **probability** is the long-run frequency of an *event*. In other words, the proportion of times we would see an event occur if we could repeat an experiment an infinite number of times. Probabilities take values between 0 and 1 inclusive.\n\n:::{.callout-note}\nIf *A* and *B* are two disjoint events, then the probability of *A* or *B* occurring is equal to the probability of *A* plus the probability of *B*. More concisely, Pr(*A* or *B*) = Pr(*A*) + Pr(*B*).\n:::\n\n#### More definitions\n\nLet *A* and *B* be two events.\n\n- Marginal probability: The probability an event occurs regardless of values of the other event\n  - P(*A*)\n  - Example: What's the probability that, in a randomly selected episode of Bob Ross, the painting features clouds?\n- Joint probability: The probability two or more events simultaneously occur\n  - Example: What's the probability that, in a randomly selected episode of Bob Ross, the painting features clouds and mountains?\n  - P(*A* and *B*)\n- Conditional probability: The probability an event occurs given the other has occurred\n  - P(*A*|*B*) or P(*B*|*A*)\n  - Example: What is the probability that a Bob Ross painting features clouds if it was randomly selected from season 1?\n  - P(*A*|*B*) = P(*A* and *B*) / P(*B*)\n- Independent events: Knowing one event has occurred does not lead to any change in the probability we assign to another event.\n  - P(*A*|*B*) = P(*A*) or P(*B*|*A*) = P(*B*)\n  - Example: The probability a painting features lakes is independent of whether or not it features rivers. More concisely, P(lakes | rivers) = P(lakes)\n  \n#### Exercise 1\n\nApproximate the probability of each example above using the `bob_ross` data set. For the last example (independence) validate or refute the claim using the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n## Data generative processes\n\nAs statisticians, we often want to model the process that generates data. For example, although Bob Ross probably does not flip a coin to decide what to paint, it might be a useful model for describing the data.\n\nTo formalize this concept, we will embrace two new concepts: **random variables** and **distributions**.\n\n### Random variables\n\nYou may not have realized it, but we've already seen random variables. A random variable is a function that maps an observed outcome to a number.\n\nFor example, when Bob Ross paints a tree and we label it \"1\" or does not paint a tree and we label it \"0\", we are defining a random variable!\n\n:::{.callout-note}\nRandom variables that only take the values **0** and **1** have a special name. They are called **indicator random variables** because they are thought of as *indicating* whether or not an event occurs.\n:::\n\nRandom variables have distributions…\n\n## Distributions\n\n### Binomial distribution\n\nThe **binomial distribution** models the number of success in a series of independent and identical binary trials and is defined by two parameters:\n\n- $k$, the total number of trials,\n- $p$, the probability of a success in an individual trial.\n\nThe sample space of a binomial random variable is $\\{0, 1, \\ldots, k \\}$. In words, there could be up to $k$ success in an binomial experiment.\n\n#### Example\n\nYou toss a fair coin 10 times. Let *A* be the event there is at least one head. What is the probability of *A*?\n\nHere $k$ is _ and $p$ is _.\n\n`rbinom()` arguments:\n\n- size is the number of trials, aka the number of coin flips in 1 experiment\n- prob is the probability of a success\n- n defines how many times to repeat the entire experiment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100) # sets random seed to ensure we get same result\n\nN = 1000 # total number of experiments of 10 coin flips\n\ncoin_flips = data.frame(num_heads = rbinom(n = N, size = 10, prob = 0.5))\n\ncoin_flips %>%\n  filter(num_heads >=1) %>%\n  nrow() / N\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.998\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoin_flips %>%\n  ggplot(aes(x = num_heads)) +\n  geom_histogram(bins = 35) +\n  theme_bw() +\n  labs(x = \"Number of heads\",\n       y  = \"Count\",\n       title = \"Distribution of the total # heads in 10 fair coin flips\") +\n  scale_x_continuous(breaks = 0:10)\n```\n\n::: {.cell-output-display}\n![](ae12_files/figure-html/visualize-binomial-1.png){width=672}\n:::\n:::\n\n\n#### Exercise 2\n\nSuppose Bob Ross paintings feature a `mountain` with probability $0.7$. (You might imagine that before Bob Ross paints, he flips an unfair coin that has a 70% chance of landing heads. If the coin lands on heads, he paints a mountain if it lands on tails he does not.) Given that there are 403 episodes of Bob Ross, what is the probability that at least 150 paintings feature a `mountain`?\n\nTo help you setup your simulation, set $N = 2000$. What is $k$? What is $p$?\n\nTo ensure we get the same answer, use the `seed` provided below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\n# code here\n```\n:::\n\n\n- As a follow-up question, what is the probability that at least 100 paintings but not more than 200 feature a `mountain`?\n\n### Mathematics of the binomial distribution\n\n\n$$\nX \\sim \\text{Binomial}(k, p)\n$$\n\n\"X has a binomial distribution with parameters k and p\"\n\nWhat this means to us is:\n\n1. we can simulate the distribution of X using the `rbinom` code from above\n\n2. we can compute the probability X equals any specific value explicitly with the equation below\n\n$$\nP(X = m) = {k \\choose m} (p)^{m}(1-p)^{k-m}\n$$\nIf we want to know, for example, the exact probability Bob Ross paints at least 150 paintings with a mountain, we would need to add up $P(X = 150) + P(X = 151) + P(X = 152) + \\ldots + P(X = 402) + P(X = 403)$.\n\n#### Example\n\nWhat's the probability that exactly 1 coin lands heads when we flip a fair coin 10 times?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# P(X = m) \n\n# k choose m\n# k = 10, m = 1\n# fair coin means p = 0.5\n\nchoose(10, 1) * (0.5)^1 * (1 - 0.5)^(10 - 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.009765625\n```\n:::\n:::\n\n\n#### Exercise 3\n\nWhat's the probability at least 1 coin lands heads? Use the equation above to compute. Hint: $P(X >= 1) = 1 - P(X = 0)$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n#### Exercise 4 (before next class)\n\nPlay with the \"random variables\" lesson [here](https://seeing-theory.brown.edu/#secondPage/chapter3). Describe what you observe.\n",
    "supporting": [
      "ae12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}