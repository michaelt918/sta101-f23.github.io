{
  "hash": "c3e64c76b677e92c240dee8474083be6",
  "result": {
    "markdown": "---\ntitle: \"Regression + Inference\"\nsubtitle: \"STA 101\"\nformat: html\n---\n\n\n## Bulletin\n\n- Draft final project report due Friday December 2\n- This Friday is last lab before peer-review in two weeks\n\n## Today\n\nBy the end of today you will...\n\n- understand regression hypothesis testing\n- interpret p-values in a regression framework\n\n## Getting started\n\nDownload this application exercise by pasting the code below into your **console**\n\n```\ndownload.file(\"https://sta101-fa22.netlify.app/static/appex/ae22.qmd\",\ndestfile = \"ae22.qmd\")\n```\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(viridis)\n```\n:::\n\n\n## Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSeoul_Bikes = read_csv(\"https://sta101.github.io/static/appex/data/Seoul_Bikes.csv\") \nSeoul_Calendar = read_csv(\"https://sta101.github.io/static/appex/data/Seoul_Calendar.csv\")\n\nbikes = left_join(Seoul_Bikes, Seoul_Calendar)\n```\n:::\n\n\nThis data set was originally analyzed in two studies^[Sathishkumar V E, Jangwoo Park, and Yongyun Cho. 'Using data mining techniques for bike sharing demand prediction in metropolitan city.' Computer Communications, Vol.153, pp.353-366, March, 2020; Sathishkumar V E and Yongyun Cho. 'A rule-based model for Seoul Bike sharing demand prediction using weather data' European Journal of Remote Sensing, pp. 1-18, Feb, 2020] of predicting bike-rental usage in Seoul, South Korea. For this lecture, the data was sourced from [UCI Machine Learning Repository](https://archive.ics.uci.edu).\n\nCode book:\n\n- `Date`: the date\n- `rented_bikes`: total number of bikes rented on a given day\n- `temp_c`: mean daily temperature (Celsius)\n-  `humidity_pct`: mean daily humidity\n- `wind_speed`: mean daily windspeed\n- `snowfall_cm`: mean daily snowfall (in cm)\n- `season`: the season\n- `holiday`: whether or not the day is a holiday\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bikes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 365\nColumns: 8\n$ Date         <chr> \"1/1/18\", \"1/10/18\", \"1/11/18\", \"1/12/17\", \"1/2/18\", \"1/3…\n$ rented_bikes <dbl> 4290, 27909, 22964, 9539, 5377, 5132, 17388, 26820, 31928…\n$ temp_c       <dbl> -1.2833333, 15.4375000, 8.3458333, -2.4541667, -3.8666667…\n$ humidity_pct <dbl> 39.33333, 54.25000, 54.16667, 45.87500, 44.00000, 64.2083…\n$ wind_speed   <dbl> 1.4541667, 2.8250000, 1.2708333, 1.5375000, 1.6083333, 3.…\n$ snowfall_cm  <dbl> 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.9041667, 0.…\n$ season       <chr> \"Winter\", \"Autumn\", \"Autumn\", \"Winter\", \"Winter\", \"Spring…\n$ holiday      <chr> \"Holiday\", \"No Holiday\", \"No Holiday\", \"No Holiday\", \"No …\n```\n:::\n:::\n\n\n## Notes\n\n### Hypothesis testing in a regression framework\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbikes %>%\n  ggplot(aes(x = temp_c, y = rented_bikes, color = holiday)) +\n  geom_point(alpha = 0.5) +\n  theme_bw() +\n  labs(x = \"Temperature\", y = \"Rented No. Bikes\", color = \"Holiday?\",\n       title = \"Rented Bicycles in Seoul\") +\n  scale_color_manual(values = c(\"red\", \"#00539B\")) +\n  geom_smooth(method = 'lm')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](ae22_files/figure-html/plot-1-1.png){width=672}\n:::\n:::\n\n\n#### Exercise 1\n\nWrite the full model equation to match the figure above to predict the number of bikes rented on a given day based on the temperature outside and whether or not the day is a holiday.\n\n\n$$\n\\text{Your equation here}\n$$\n\n\n#### Exercise 2\n\nFit the model above and examine the tidied output. What are the p-values associated with each predictor?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\nThe p-value output is associated with a typical hypothesis test... but what's the null and alternative?\n\nThe main idea is that if a predictor (e.g. holiday) does not help us explain bike rental numbers then its associated $\\beta$ might as well be 0. Within the framework of hypothesis testing:\n\n$H_0$: $\\beta_{\\text{holiday}} = 0$\n\n$H_A:$ $\\beta_{\\text{holiday}} \\neq 0$\n\nFor OLS regression, our test statistic is \n\n$$\nT = \\frac{\\hat{\\beta} - 0}{\\text{SE}_{\\hat{\\beta}}} \\sim t_{n - 4}\n$$\nWe want to see if our observed statistic, $T$, falls far in the tail under the null.\n\n`R` takes care of much of this behind the scenes with the tidy output and reports a p-value for each $\\beta$ by default.\n\n#### Exercise 3\n\nCalculate the p-value associated with $\\beta_{holiday}$ manually using the equation above. Note: in a regression setting, the degrees of freedom is the number of observations minus the number of $\\beta$s.\n\nCompare the p-value to one reported in the tidy output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n- Is $\\beta_{\\text{holiday}}$ significant at the $\\alpha = 0.05$ level? State your conclusion.\n\n- Looking at the tidied output, are any of the $\\beta$s not significant at the $\\alpha = 0.05$ level?\n\n- Change the model from an interaction effects to a main effects model. What do you notice?\n\n",
    "supporting": [
      "ae22_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}