{
  "hash": "02bdcb35be307a75efc36a2ae8226272",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Data Analysis I\"\nsubtitle: \"STA 101\"\nformat: html\n---\n\n\n## Bulletin\n\n- [Lab 1](https://sta101-fa22.netlify.app/static/labs/lab01.html) due Thursday at 11:59pm on gradescope\n- How to render to pdf directly\n\n## Today\n\nWe'll begin today by visiting the last figure of [ae2](https://sta101-fa22.netlify.app/static/appex/ae2.html).\n\nBy the end of today you will...\n\n- harness the power of `filter()` using logic\n- create and interpret scatter plots, bar plots, stacked bar plots, facet plots and be able to look up and use other `ggplot` geometries\n\n\n## Getting started\n\nDownload this application exercise by pasting the code below into your **console**\n\n```\ndownload.file(\"https://sta101-fa22.netlify.app/static/appex/ae3.qmd\",\ndestfile = \"ae3.qmd\")\n```\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(viridis) # we'll use to customize colors\n```\n:::\n\n\n## Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(penguins)\n```\n:::\n\n\nType `?palmerpenguins` to learn more about this package. Or better yet, check it out [here](https://allisonhorst.github.io/palmerpenguins/).\n\n## Logic in R\n\nThe table of logical operators below will be helpful as you work with filtering.\n\n|operator | definition |\n|:----------|:--------|\n| `<` |   is less than? |\n| `<=` |   is less than or equal to? |\n| `>` |   is greater than? |\n| `>=` |   is greater than or equal to? |\n| `==` |   is exactly equal to? |\n| `!=` |   is not equal to? |\n| `is.na(x)` |   is x NA? |\n| `!is.na(x)` |   is x not NA? |\n| `x %in% y` |   is x in y? |\n| `!(x %in% y)` |   is x not in y? |\n| `x & y` |   is x AND y? |\n| `x \\| y` |   is x OR y? |\n| `!x` |   is not x? |\n\nThe above operations return `TRUE` (1) or `FALSE` (0).\n\n### Examples\n\nHow many penguins have flipper length > 200 mm?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(flipper_length_mm > 200)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 148 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Dream               35.7          18                 202        3550\n 2 Adelie  Dream               41.1          18.1               205        4300\n 3 Adelie  Dream               40.8          18.9               208        4300\n 4 Adelie  Biscoe              41            20                 203        4725\n 5 Adelie  Torgersen           41.4          18.5               202        3875\n 6 Adelie  Torgersen           44.1          18                 210        4000\n 7 Adelie  Dream               41.5          18.5               201        4000\n 8 Gentoo  Biscoe              46.1          13.2               211        4500\n 9 Gentoo  Biscoe              50            16.3               230        5700\n10 Gentoo  Biscoe              48.7          14.1               210        4450\n# ℹ 138 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n- We could also pipe into `nrow()` to quickly grab the number of rows. Try it!\n\nHow many **female** penguins have flipper length > 200 mm?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(flipper_length_mm > 200 & (sex == \"female\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Dream            35.7          18                 202        3550\n 2 Gentoo  Biscoe           46.1          13.2               211        4500\n 3 Gentoo  Biscoe           48.7          14.1               210        4450\n 4 Gentoo  Biscoe           46.5          13.5               210        4550\n 5 Gentoo  Biscoe           45.4          14.6               211        4800\n 6 Gentoo  Biscoe           43.3          13.4               209        4400\n 7 Gentoo  Biscoe           40.9          13.7               214        4650\n 8 Gentoo  Biscoe           45.5          13.7               214        4650\n 9 Gentoo  Biscoe           45.8          14.6               210        4200\n10 Gentoo  Biscoe           42            13.5               210        4150\n# ℹ 50 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\nFor how many penguins was flipper length not measured (i.e. reported as NA)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(is.na(flipper_length_mm))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen             NA            NA                NA          NA\n2 Gentoo  Biscoe                NA            NA                NA          NA\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\nHow many penguins are of species Adelie *or* Chinstrap?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(species %in% c(\"Adelie\", \"Chinstrap\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 220 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 210 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n#### Exercise 1:\n\nDouble check the *Adelie* and *Chinstrap* total using `count()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n\n#### Exercise 2:\n\nWhat is the mean bill length of *Adelie* penguins? Hint: filter and then use `summarize()` as seen in lab 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n\n#### Exercise 3:\n\nHow many penguins have a bill length greater than 40 mm *or* a bill depth less than 15 mm?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n#### Exercise 4: \n\nWhat proportion of penguins are from the island `Torgersen`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n\n## Plots\n\nThe procedure used to construct plots can be summarized using the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [data set], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   geom_xxx() + \n  other options\n```\n:::\n\n\n### Example: bar plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = species)) +\n  geom_bar() +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n```\n\n::: {.cell-output-display}\n![](ae3_files/figure-html/ex-bar-plot-1.png){width=672}\n:::\n:::\n\n\n### Example: stacked bar plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(!is.na(sex)) %>%\nggplot(mapping = aes(x = species, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Species\", y = \"Count\", title = \"Palmer penguin species\")\n```\n\n::: {.cell-output-display}\n![](ae3_files/figure-html/bar-plot-fill-1.png){width=672}\n:::\n:::\n\n\n- try with and without `position = \"fill\"`\n\n### Aesthetics\n\nAn aesthetic is a visual property in your plot that is derived from the data.\n\n- shape\n- color\n- size\n- alpha (transparency)\n\nWe can map a variable in our data set to a color, a size, a transparency, and so on. The aesthetics that can be used with each `geom_` can be found in the documentation.\n\nHere we are going to use the viridis package, which has more color-blind accessible colors. `scale_color_viridis` specifies which colors you want to use. You can learn more about the options [here](https://www.rdocumentation.org/packages/viridis/versions/0.5.1/topics/scale_color_viridis).\n\nOther sources that can be helpful in devising accessible color schemes include [Color Brewer](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3), the [Wes Anderson package](https://github.com/karthik/wesanderson), and the [cividis package](https://github.com/marcosci/cividis).\n\nThis visualization shows a scatterplot of bill length (x variable) and flipper length (y variable). Using the viridis function, we make points for male penguins purple and female penguins yellow. We also add axes labels and a title.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     color = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete=TRUE, option = \"D\", name=\"Sex\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 11 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ae3_files/figure-html/aesthetic-1-1.png){width=672}\n:::\n:::\n\n\n#### Exercise 5:\nCan you remove the NAs from the above visualization?\n\n**Question:** What will the visualization look like below? Write your answer \ndown before running the code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, y = flipper_length_mm,\n                     shape = sex)) + \n   geom_point() + \n   labs(title = \"Flipper length vs bill length\",\n        x = \"Bill length (mm)\", y = \"Flipper length (mm)\") + \n        scale_color_viridis(discrete=TRUE, option = \"D\", name=\"Sex\")\n```\n:::\n\n\n### Faceting\n\nWe can use smaller plots to display different subsets of the data using faceting. This is helpful to examine conditional relationships.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = island)) +\n  geom_point() +\n  facet_wrap(~ species) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Island\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ae3_files/figure-html/faceting-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = bill_length_mm, flipper_length_mm, color = species)) +\n  geom_point() +\n  facet_wrap(~ island) +\n  labs(x = \"Bill length (mm)\", y = \"Flipper length (mm)\", color = \"Island\") +\n  scale_color_viridis(discrete = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ae3_files/figure-html/faceting-2-1.png){width=672}\n:::\n:::\n\n\n## `ggplot` activity\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code here\n```\n:::\n\n\n## Additional resources\n\n- Find more ggplot geometries at [https://ggplot2.tidyverse.org/reference/](https://ggplot2.tidyverse.org/reference/)\n\n",
    "supporting": [
      "ae3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}